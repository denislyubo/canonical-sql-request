name: CICD

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'

      - name: Install dependencies
        run: |
          make install
      - name: Run go Vet
        run: |
          make vet
      - name: Install staticcheck
        run: |
          make install-static-check
      - name: Run staticcheck
        run: |
          make static-check
      - name: Install golint
        run: |
          make install-go-lint
      - name: Run golint
        run: |
          make lint
      - name: Build
        run: |
          make build
      - name: Test
        run: |
          make test
  deploy:
    runs-on: ubuntu-22.04
    needs: [build]
    #    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # assuming github repository name is the same to docker hub one.
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}